{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "create",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setAKXT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract AKX",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61072b8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80636b31881314610067578063715018a61461007c5780638da5cb5b14610084578063efc81a8c146100ad578063f2fde38b146100b5578063fc0c546a146100c8575b600080fd5b61007a61007536600461052d565b6100db565b005b61007a6101e9565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61007a61021f565b61007a6100c336600461052d565b610442565b600154610091906001600160a01b031681565b6000546001600160a01b0316331461010e5760405162461bcd60e51b81526004016101059061055d565b60405180910390fd5b6001546001600160a01b0316156101715760405162461bcd60e51b815260206004820152602160248201527f46756e6374696f6e2063616e20626520696e766f6b6564206f6e6c79206f6e636044820152606560f81b6064820152608401610105565b6001600160a01b0381166101c75760405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420746f6b656e20636f6e7472616374206164647265737300006044820152606401610105565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146102135760405162461bcd60e51b81526004016101059061055d565b61021d60006104dd565b565b6001546001600160a01b03166102775760405162461bcd60e51b815260206004820152601f60248201527f546f6b656e20636f6e747261637420686173206e6f74206265656e20736574006044820152606401610105565b6001546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b1580156102bc57600080fd5b505afa1580156102d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f49190610592565b6103029060ff16600a6106b1565b61030e906103e86106bd565b6001546040516370a0823160e01b815233600482015291925082916001600160a01b03909116906370a082319060240160206040518083038186803b15801561035657600080fd5b505afa15801561036a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038e91906106dc565b106103db5760405162461bcd60e51b815260206004820152601960248201527f43616e6e6f742061637175697265206d6f72652066756e6473000000000000006044820152606401610105565b6001546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561042757600080fd5b505af115801561043b573d6000803e3d6000fd5b5050505050565b6000546001600160a01b0316331461046c5760405162461bcd60e51b81526004016101059061055d565b6001600160a01b0381166104d15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610105565b6104da816104dd565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561053f57600080fd5b81356001600160a01b038116811461055657600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156105a457600080fd5b815160ff8116811461055657600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b808511156106065781600019048211156105ec576105ec6105b5565b808516156105f957918102915b93841c93908002906105d0565b509250929050565b60008261061d575060016106ab565b8161062a575060006106ab565b8160018114610640576002811461064a57610666565b60019150506106ab565b60ff84111561065b5761065b6105b5565b50506001821b6106ab565b5060208310610133831016604e8410600b8410161715610689575081810a6106ab565b61069383836105cb565b80600019048211156106a7576106a76105b5565b0290505b92915050565b6000610556838361060e565b60008160001904831182151516156106d7576106d76105b5565b500290565b6000602082840312156106ee57600080fd5b505191905056fea2646970667358221220f71df9240b250aa9a6516c6b55d949b39a5bcbee4151f2cf389944eee050ee6864736f6c63430008090033",
    "sourceMap": "130:686:1:-:0;;;;;;;;;;;;-1:-1:-1;920:32:55;718:10:83;920:18:55;:32::i;:::-;130:686:1;;2269:187:55;2342:16;2361:6;;-1:-1:-1;;;;;2377:17:55;;;-1:-1:-1;;;;;;2377:17:55;;;;;;2409:40;;2361:6;;;;;;;2409:40;;2342:16;2409:40;2332:124;2269:187;:::o;130:686:1:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80636b31881314610067578063715018a61461007c5780638da5cb5b14610084578063efc81a8c146100ad578063f2fde38b146100b5578063fc0c546a146100c8575b600080fd5b61007a61007536600461052d565b6100db565b005b61007a6101e9565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61007a61021f565b61007a6100c336600461052d565b610442565b600154610091906001600160a01b031681565b6000546001600160a01b0316331461010e5760405162461bcd60e51b81526004016101059061055d565b60405180910390fd5b6001546001600160a01b0316156101715760405162461bcd60e51b815260206004820152602160248201527f46756e6374696f6e2063616e20626520696e766f6b6564206f6e6c79206f6e636044820152606560f81b6064820152608401610105565b6001600160a01b0381166101c75760405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420746f6b656e20636f6e7472616374206164647265737300006044820152606401610105565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146102135760405162461bcd60e51b81526004016101059061055d565b61021d60006104dd565b565b6001546001600160a01b03166102775760405162461bcd60e51b815260206004820152601f60248201527f546f6b656e20636f6e747261637420686173206e6f74206265656e20736574006044820152606401610105565b6001546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b1580156102bc57600080fd5b505afa1580156102d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f49190610592565b6103029060ff16600a6106b1565b61030e906103e86106bd565b6001546040516370a0823160e01b815233600482015291925082916001600160a01b03909116906370a082319060240160206040518083038186803b15801561035657600080fd5b505afa15801561036a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038e91906106dc565b106103db5760405162461bcd60e51b815260206004820152601960248201527f43616e6e6f742061637175697265206d6f72652066756e6473000000000000006044820152606401610105565b6001546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561042757600080fd5b505af115801561043b573d6000803e3d6000fd5b5050505050565b6000546001600160a01b0316331461046c5760405162461bcd60e51b81526004016101059061055d565b6001600160a01b0381166104d15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610105565b6104da816104dd565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561053f57600080fd5b81356001600160a01b038116811461055657600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156105a457600080fd5b815160ff8116811461055657600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b808511156106065781600019048211156105ec576105ec6105b5565b808516156105f957918102915b93841c93908002906105d0565b509250929050565b60008261061d575060016106ab565b8161062a575060006106ab565b8160018114610640576002811461064a57610666565b60019150506106ab565b60ff84111561065b5761065b6105b5565b50506001821b6106ab565b5060208310610133831016604e8410600b8410161715610689575081810a6106ab565b61069383836105cb565b80600019048211156106a7576106a76105b5565b0290505b92915050565b6000610556838361060e565b60008160001904831182151516156106d7576106d76105b5565b500290565b6000602082840312156106ee57600080fd5b505191905056fea2646970667358221220f71df9240b250aa9a6516c6b55d949b39a5bcbee4151f2cf389944eee050ee6864736f6c63430008090033",
    "sourceMap": "130:686:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;189:310;;;;;;:::i;:::-;;:::i;:::-;;1667:101:55;;;:::i;1035:85::-;1081:7;1107:6;-1:-1:-1;;;;;1107:6:55;1035:85;;;-1:-1:-1;;;;;469:32:103;;;451:51;;439:2;424:18;1035:85:55;;;;;;;505:309:1;;;:::i;1917:198:55:-;;;;;;:::i;:::-;;:::i;167:16:1:-;;;;;-1:-1:-1;;;;;167:16:1;;;189:310;1081:7:55;1107:6;-1:-1:-1;;;;;1107:6:55;718:10:83;1247:23:55;1239:68;;;;-1:-1:-1;;;1239:68:55;;;;;;;:::i;:::-;;;;;;;;;302:5:1::1;::::0;-1:-1:-1;;;;;302:5:1::1;294:28:::0;286:74:::1;;;::::0;-1:-1:-1;;;286:74:1;;1295:2:103;286:74:1::1;::::0;::::1;1277:21:103::0;1334:2;1314:18;;;1307:30;1373:34;1353:18;;;1346:62;-1:-1:-1;;;1424:18:103;;;1417:31;1465:19;;286:74:1::1;1093:397:103::0;286:74:1::1;-1:-1:-1::0;;;;;407:20:1;::::1;399:63;;;::::0;-1:-1:-1;;;399:63:1;;1697:2:103;399:63:1::1;::::0;::::1;1679:21:103::0;1736:2;1716:18;;;1709:30;1775:32;1755:18;;;1748:60;1825:18;;399:63:1::1;1495:354:103::0;399:63:1::1;473:5;:19:::0;;-1:-1:-1;;;;;;473:19:1::1;-1:-1:-1::0;;;;;473:19:1;;;::::1;::::0;;;::::1;::::0;;189:310::o;1667:101:55:-;1081:7;1107:6;-1:-1:-1;;;;;1107:6:55;718:10:83;1247:23:55;1239:68;;;;-1:-1:-1;;;1239:68:55;;;;;;;:::i;:::-;1731:30:::1;1758:1;1731:18;:30::i;:::-;1667:101::o:0;505:309:1:-;558:5;;-1:-1:-1;;;;;558:5:1;542:72;;;;-1:-1:-1;;;542:72:1;;2056:2:103;542:72:1;;;2038:21:103;2095:2;2075:18;;;2068:30;2134:33;2114:18;;;2107:61;2185:18;;542:72:1;1854:355:103;542:72:1;662:5;;:16;;;-1:-1:-1;;;662:16:1;;;;624:14;;-1:-1:-1;;;;;662:5:1;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;648:31;;654:25;;648:2;:31;:::i;:::-;641:38;;:4;:38;:::i;:::-;693:5;;:27;;-1:-1:-1;;;693:27:1;;709:10;693:27;;;451:51:103;624:55:1;;-1:-1:-1;624:55:1;;-1:-1:-1;;;;;693:5:1;;;;:15;;424:18:103;;693:27:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;689:78;;732:35;;-1:-1:-1;;;732:35:1;;4562:2:103;732:35:1;;;4544:21:103;4601:2;4581:18;;;4574:30;4640:27;4620:18;;;4613:55;4685:18;;732:35:1;4360:349:103;689:78:1;777:5;;:30;;-1:-1:-1;;;777:30:1;;788:10;777:30;;;4888:51:103;4955:18;;;4948:34;;;-1:-1:-1;;;;;777:5:1;;;;:10;;4861:18:103;;777:30:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;532:282;505:309::o;1917:198:55:-;1081:7;1107:6;-1:-1:-1;;;;;1107:6:55;718:10:83;1247:23:55;1239:68;;;;-1:-1:-1;;;1239:68:55;;;;;;;:::i;:::-;-1:-1:-1;;;;;2005:22:55;::::1;1997:73;;;::::0;-1:-1:-1;;;1997:73:55;;5195:2:103;1997:73:55::1;::::0;::::1;5177:21:103::0;5234:2;5214:18;;;5207:30;5273:34;5253:18;;;5246:62;-1:-1:-1;;;5324:18:103;;;5317:36;5370:19;;1997:73:55::1;4993:402:103::0;1997:73:55::1;2080:28;2099:8;2080:18;:28::i;:::-;1917:198:::0;:::o;2269:187::-;2342:16;2361:6;;-1:-1:-1;;;;;2377:17:55;;;-1:-1:-1;;;;;;2377:17:55;;;;;;2409:40;;2361:6;;;;;;;2409:40;;2342:16;2409:40;2332:124;2269:187;:::o;14:286:103:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:103;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:103:o;732:356::-;934:2;916:21;;;953:18;;;946:30;1012:34;1007:2;992:18;;985:62;1079:2;1064:18;;732:356::o;2214:273::-;2282:6;2335:2;2323:9;2314:7;2310:23;2306:32;2303:52;;;2351:1;2348;2341:12;2303:52;2383:9;2377:16;2433:4;2426:5;2422:16;2415:5;2412:27;2402:55;;2453:1;2450;2443:12;2492:127;2553:10;2548:3;2544:20;2541:1;2534:31;2584:4;2581:1;2574:15;2608:4;2605:1;2598:15;2624:422;2713:1;2756:5;2713:1;2770:270;2791:7;2781:8;2778:21;2770:270;;;2850:4;2846:1;2842:6;2838:17;2832:4;2829:27;2826:53;;;2859:18;;:::i;:::-;2909:7;2899:8;2895:22;2892:55;;;2929:16;;;;2892:55;3008:22;;;;2968:15;;;;2770:270;;;2774:3;2624:422;;;;;:::o;3051:806::-;3100:5;3130:8;3120:80;;-1:-1:-1;3171:1:103;3185:5;;3120:80;3219:4;3209:76;;-1:-1:-1;3256:1:103;3270:5;;3209:76;3301:4;3319:1;3314:59;;;;3387:1;3382:130;;;;3294:218;;3314:59;3344:1;3335:10;;3358:5;;;3382:130;3419:3;3409:8;3406:17;3403:43;;;3426:18;;:::i;:::-;-1:-1:-1;;3482:1:103;3468:16;;3497:5;;3294:218;;3596:2;3586:8;3583:16;3577:3;3571:4;3568:13;3564:36;3558:2;3548:8;3545:16;3540:2;3534:4;3531:12;3527:35;3524:77;3521:159;;;-1:-1:-1;3633:19:103;;;3665:5;;3521:159;3712:34;3737:8;3731:4;3712:34;:::i;:::-;3782:6;3778:1;3774:6;3770:19;3761:7;3758:32;3755:58;;;3793:18;;:::i;:::-;3831:20;;-1:-1:-1;3051:806:103;;;;;:::o;3862:131::-;3922:5;3951:36;3978:8;3972:4;3951:36;:::i;3998:168::-;4038:7;4104:1;4100;4096:6;4092:14;4089:1;4086:21;4081:1;4074:9;4067:17;4063:45;4060:71;;;4111:18;;:::i;:::-;-1:-1:-1;4151:9:103;;3998:168::o;4171:184::-;4241:6;4294:2;4282:9;4273:7;4269:23;4265:32;4262:52;;;4310:1;4307;4300:12;4262:52;-1:-1:-1;4333:16:103;;4171:184;-1:-1:-1;4171:184:103:o",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/nicolascloutier/Documents/GitHub/akapz-dao/chain/contracts/AKX/AKXTFaucet.sol",
    "id": 237,
    "exportedSymbols": {
      "AKX": [
        139
      ],
      "AKXTFaucet": [
        236
      ],
      "AccessControl": [
        9099
      ],
      "AccessControlEnumerable": [
        9224
      ],
      "Context": [
        16669
      ],
      "Counters": [
        16743
      ],
      "ECDSA": [
        17567
      ],
      "EIP712": [
        17721
      ],
      "ERC165": [
        17745
      ],
      "ERC20": [
        13944
      ],
      "ERC20Burnable": [
        14066
      ],
      "ERC20Pausable": [
        14103
      ],
      "ERC20Permit": [
        14937
      ],
      "EnumerableSet": [
        19490
      ],
      "IAccessControl": [
        9297
      ],
      "IAccessControlEnumerable": [
        9322
      ],
      "IERC165": [
        17757
      ],
      "IERC20": [
        14022
      ],
      "IERC20Metadata": [
        14765
      ],
      "IERC20Permit": [
        14973
      ],
      "Ownable": [
        9427
      ],
      "Pausable": [
        13317
      ],
      "Strings": [
        16946
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:784:1",
    "nodes": [
      {
        "id": 141,
        "nodeType": "PragmaDirective",
        "src": "32:22:1",
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 142,
        "nodeType": "ImportDirective",
        "src": "56:19:1",
        "absolutePath": "/Users/nicolascloutier/Documents/GitHub/akapz-dao/chain/contracts/AKX/AKX.sol",
        "file": "./AKX.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 237,
        "sourceUnit": 140,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 143,
        "nodeType": "ImportDirective",
        "src": "76:52:1",
        "absolutePath": "/Users/nicolascloutier/Documents/GitHub/akapz-dao/chain/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 237,
        "sourceUnit": 9428,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 236,
        "nodeType": "ContractDefinition",
        "src": "130:686:1",
        "nodes": [
          {
            "id": 148,
            "nodeType": "VariableDeclaration",
            "src": "167:16:1",
            "constant": false,
            "functionSelector": "fc0c546a",
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "178:5:1",
            "scope": 236,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AKX_$139",
              "typeString": "contract AKX"
            },
            "typeName": {
              "id": 147,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 146,
                "name": "AKX",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 139,
                "src": "167:3:1"
              },
              "referencedDeclaration": 139,
              "src": "167:3:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AKX_$139",
                "typeString": "contract AKX"
              }
            },
            "visibility": "public"
          },
          {
            "id": 185,
            "nodeType": "FunctionDefinition",
            "src": "189:310:1",
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "241:258:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 158,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 148,
                              "src": "302:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AKX_$139",
                                "typeString": "contract AKX"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AKX_$139",
                                "typeString": "contract AKX"
                              }
                            ],
                            "id": 157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "294:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 156,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "294:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "294:14:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "320:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "312:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 160,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "312:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "312:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "294:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46756e6374696f6e2063616e20626520696e766f6b6564206f6e6c79206f6e6365",
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "324:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2051a8e2d4cfa54558cc38ad478fae354285eb958130a7f9cfc780318ec8c659",
                          "typeString": "literal_string \"Function can be invoked only once\""
                        },
                        "value": "Function can be invoked only once"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2051a8e2d4cfa54558cc38ad478fae354285eb958130a7f9cfc780318ec8c659",
                          "typeString": "literal_string \"Function can be invoked only once\""
                        }
                      ],
                      "id": 155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "286:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "286:74:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "286:74:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 169,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "407:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "425:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "417:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 170,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "417:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "417:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "407:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e20636f6e74726163742061646472657373",
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "429:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1",
                          "typeString": "literal_string \"Invalid token contract address\""
                        },
                        "value": "Invalid token contract address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1",
                          "typeString": "literal_string \"Invalid token contract address\""
                        }
                      ],
                      "id": 168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "399:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "399:63:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "399:63:1"
                },
                {
                  "expression": {
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 178,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "473:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AKX_$139",
                        "typeString": "contract AKX"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 180,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "485:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 179,
                        "name": "AKX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "481:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AKX_$139_$",
                          "typeString": "type(contract AKX)"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "481:11:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AKX_$139",
                        "typeString": "contract AKX"
                      }
                    },
                    "src": "473:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AKX_$139",
                      "typeString": "contract AKX"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "473:19:1"
                }
              ]
            },
            "functionSelector": "6b318813",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 153,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 152,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9369,
                  "src": "231:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "231:9:1"
              }
            ],
            "name": "setAKXT",
            "nameLocation": "198:7:1",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "214:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "206:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "206:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "205:16:1"
            },
            "returnParameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "241:0:1"
            },
            "scope": 236,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 235,
            "nodeType": "FunctionDefinition",
            "src": "505:309:1",
            "body": {
              "id": 234,
              "nodeType": "Block",
              "src": "532:282:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 191,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 148,
                              "src": "558:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AKX_$139",
                                "typeString": "contract AKX"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AKX_$139",
                                "typeString": "contract AKX"
                              }
                            ],
                            "id": 190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "550:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 189,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "550:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "550:14:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "576:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "568:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 193,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "568:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "568:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "550:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20636f6e747261637420686173206e6f74206265656e20736574",
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "580:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b51b0945d6bd79460fef28524bd99d69bc44c37389c802a8373178881086648",
                          "typeString": "literal_string \"Token contract has not been set\""
                        },
                        "value": "Token contract has not been set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b51b0945d6bd79460fef28524bd99d69bc44c37389c802a8373178881086648",
                          "typeString": "literal_string \"Token contract has not been set\""
                        }
                      ],
                      "id": 188,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "542:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "542:72:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "542:72:1"
                },
                {
                  "assignments": [
                    202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 202,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "632:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 234,
                      "src": "624:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 201,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "624:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 213,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31303030",
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "641:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "648:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 207,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 148,
                                "src": "662:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AKX_$139",
                                  "typeString": "contract AKX"
                                }
                              },
                              "id": 208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "decimals",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13433,
                              "src": "662:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                "typeString": "function () view external returns (uint8)"
                              }
                            },
                            "id": 209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "662:16:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "654:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 205,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "654:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "654:25:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "648:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "641:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "624:55:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 216,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "709:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "709:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 214,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "693:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AKX_$139",
                            "typeString": "contract AKX"
                          }
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13457,
                        "src": "693:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "693:27:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 219,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "724:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "693:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 225,
                  "nodeType": "IfStatement",
                  "src": "689:78:1",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "43616e6e6f742061637175697265206d6f72652066756e6473",
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "739:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b2cce4c582a32170b043ae452e4960b198c003d2c23c745308adb8e3f7d53f53",
                            "typeString": "literal_string \"Cannot acquire more funds\""
                          },
                          "value": "Cannot acquire more funds"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_b2cce4c582a32170b043ae452e4960b198c003d2c23c745308adb8e3f7d53f53",
                            "typeString": "literal_string \"Cannot acquire more funds\""
                          }
                        ],
                        "id": 221,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "732:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "732:35:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 224,
                    "nodeType": "ExpressionStatement",
                    "src": "732:35:1"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 229,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "788:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "788:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 231,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "800:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 226,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "777:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AKX_$139",
                          "typeString": "contract AKX"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85,
                      "src": "777:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "777:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 233,
                  "nodeType": "ExpressionStatement",
                  "src": "777:30:1"
                }
              ]
            },
            "functionSelector": "efc81a8c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "create",
            "nameLocation": "514:6:1",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "520:2:1"
            },
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "532:0:1"
            },
            "scope": 236,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 144,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9427,
              "src": "153:7:1"
            },
            "id": 145,
            "nodeType": "InheritanceSpecifier",
            "src": "153:7:1"
          }
        ],
        "canonicalName": "AKXTFaucet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          236,
          9427,
          16669
        ],
        "name": "AKXTFaucet",
        "nameLocation": "139:10:1",
        "scope": 237,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  }
}