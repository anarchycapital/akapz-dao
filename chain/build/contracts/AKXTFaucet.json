{
  "contractName": "AKXTFaucet",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract AKX",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setAKXT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "create",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setAKXT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract AKX\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/AKX/AKXTFaucet.sol\":\"AKXTFaucet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x978847fbff92d66d27d8767402a90ba996970b1936b372406aa17f5492bd8dc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1414cb92779420b50d3e796b47bad6ea800ef1805bc6f9bf35a3ccb4e17db3dc\",\"dweb:/ipfs/QmaMzwYqLiivfaWSgqeaAPboBtJjVD1hSrH48p7ExJZ7DG\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0x07536242e24ee7067295d32c08e495a33e605f3c52f8ee4ec3bdcb7a351313d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01f99dbf2ce567a64a03fc4d38b76d64d52bf1a2302922971446b1cf777220ec\",\"dweb:/ipfs/QmSiotbcG2KMuXfbKyKTcHu9ujBp67jmbULJyYLDpsrpC1\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x3c07f43e60e099b3b157243b3152722e73b80eeb7985c2cd73712828d7f7da29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://466ffb5a6e3bd65fffd996f9287ffd240ea21588a338c6efe143d94eaed014a7\",\"dweb:/ipfs/Qmans3vvPJZcvxe9KLAPc9Xwe4TFVTJdzaQGpi62Vrhoe2\"]},\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xacac2065b3ed1facff1163435890d4a6bcdc474e857e8e2c91ae5fb50418f723\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acd44ec097dd623f40870ca848c31deb02dca032ec9c56bd2e52ee103d35ce6d\",\"dweb:/ipfs/Qme3CuA45xCft72RjE6s4bmhffpe2NHvHULH9fh5oPbzBv\"]},\"project:/contracts/AKX/AKX.sol\":{\"keccak256\":\"0x56b79fc0d0405cc43f7e00a49cbc3664a9156aee944f79077628f532439ae6cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d57025c1c5f8018464aeaa234bb0b8ac47ec8ce7816c340809273bd2ccf5beee\",\"dweb:/ipfs/QmUWeH7WtNKgBNPYnLjNhceFaXJ86npoHDrwcQDcJvNTkU\"]},\"project:/contracts/AKX/AKXTFaucet.sol\":{\"keccak256\":\"0xcb7b41732051b162a88fd1a9a829220be56c9752c4509489f96be195b591248f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbf7bff3a2b5dd662552214f33d0e187a36f7a251fcc19eebfa577469d6b5194\",\"dweb:/ipfs/QmWGUHM7pXDUea4Ty1X11CPq3MDGqSXbPKhBE1axpD6okD\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610f728061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80636b31881314610067578063715018a6146100835780638da5cb5b1461008d578063efc81a8c146100ab578063f2fde38b146100b5578063fc0c546a146100d1575b600080fd5b610081600480360381019061007c919061087e565b6100ef565b005b61008b6102b0565b005b610095610338565b6040516100a291906108ba565b60405180910390f35b6100b3610361565b005b6100cf60048036038101906100ca919061087e565b610631565b005b6100d9610729565b6040516100e69190610934565b60405180910390f35b6100f761074f565b73ffffffffffffffffffffffffffffffffffffffff16610115610338565b73ffffffffffffffffffffffffffffffffffffffff161461016b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610162906109ac565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f390610a3e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561026c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026390610aaa565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6102b861074f565b73ffffffffffffffffffffffffffffffffffffffff166102d6610338565b73ffffffffffffffffffffffffffffffffffffffff161461032c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610323906109ac565b60405180910390fd5b6103366000610757565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ea90610b16565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561045d57600080fd5b505afa158015610471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104959190610b6f565b60ff16600a6104a49190610d08565b6103e86104b19190610d53565b905080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161050f91906108ba565b60206040518083038186803b15801561052757600080fd5b505afa15801561053b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055f9190610dd9565b1061059f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059690610e52565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016105fc929190610e81565b600060405180830381600087803b15801561061657600080fd5b505af115801561062a573d6000803e3d6000fd5b5050505050565b61063961074f565b73ffffffffffffffffffffffffffffffffffffffff16610657610338565b73ffffffffffffffffffffffffffffffffffffffff16146106ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a4906109ac565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561071d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071490610f1c565b60405180910390fd5b61072681610757565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061084b82610820565b9050919050565b61085b81610840565b811461086657600080fd5b50565b60008135905061087881610852565b92915050565b6000602082840312156108945761089361081b565b5b60006108a284828501610869565b91505092915050565b6108b481610840565b82525050565b60006020820190506108cf60008301846108ab565b92915050565b6000819050919050565b60006108fa6108f56108f084610820565b6108d5565b610820565b9050919050565b600061090c826108df565b9050919050565b600061091e82610901565b9050919050565b61092e81610913565b82525050565b60006020820190506109496000830184610925565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061099660208361094f565b91506109a182610960565b602082019050919050565b600060208201905081810360008301526109c581610989565b9050919050565b7f46756e6374696f6e2063616e20626520696e766f6b6564206f6e6c79206f6e6360008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b6000610a2860218361094f565b9150610a33826109cc565b604082019050919050565b60006020820190508181036000830152610a5781610a1b565b9050919050565b7f496e76616c696420746f6b656e20636f6e747261637420616464726573730000600082015250565b6000610a94601e8361094f565b9150610a9f82610a5e565b602082019050919050565b60006020820190508181036000830152610ac381610a87565b9050919050565b7f546f6b656e20636f6e747261637420686173206e6f74206265656e2073657400600082015250565b6000610b00601f8361094f565b9150610b0b82610aca565b602082019050919050565b60006020820190508181036000830152610b2f81610af3565b9050919050565b600060ff82169050919050565b610b4c81610b36565b8114610b5757600080fd5b50565b600081519050610b6981610b43565b92915050565b600060208284031215610b8557610b8461081b565b5b6000610b9384828501610b5a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115610c2257808604811115610bfe57610bfd610b9c565b5b6001851615610c0d5780820291505b8081029050610c1b85610bcb565b9450610be2565b94509492505050565b600082610c3b5760019050610cf7565b81610c495760009050610cf7565b8160018114610c5f5760028114610c6957610c98565b6001915050610cf7565b60ff841115610c7b57610c7a610b9c565b5b8360020a915084821115610c9257610c91610b9c565b5b50610cf7565b5060208310610133831016604e8410600b8410161715610ccd5782820a905083811115610cc857610cc7610b9c565b5b610cf7565b610cda8484846001610bd8565b92509050818404811115610cf157610cf0610b9c565b5b81810290505b9392505050565b6000819050919050565b6000610d1382610cfe565b9150610d1e83610cfe565b9250610d4b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610c2b565b905092915050565b6000610d5e82610cfe565b9150610d6983610cfe565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610da257610da1610b9c565b5b828202905092915050565b610db681610cfe565b8114610dc157600080fd5b50565b600081519050610dd381610dad565b92915050565b600060208284031215610def57610dee61081b565b5b6000610dfd84828501610dc4565b91505092915050565b7f43616e6e6f742061637175697265206d6f72652066756e647300000000000000600082015250565b6000610e3c60198361094f565b9150610e4782610e06565b602082019050919050565b60006020820190508181036000830152610e6b81610e2f565b9050919050565b610e7b81610cfe565b82525050565b6000604082019050610e9660008301856108ab565b610ea36020830184610e72565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610f0660268361094f565b9150610f1182610eaa565b604082019050919050565b60006020820190508181036000830152610f3581610ef9565b905091905056fea26469706673582212206c70f303887eee1840bb791e12d5b5126d250d8169d40c640c1196d1e9ffdc4864736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80636b31881314610067578063715018a6146100835780638da5cb5b1461008d578063efc81a8c146100ab578063f2fde38b146100b5578063fc0c546a146100d1575b600080fd5b610081600480360381019061007c919061087e565b6100ef565b005b61008b6102b0565b005b610095610338565b6040516100a291906108ba565b60405180910390f35b6100b3610361565b005b6100cf60048036038101906100ca919061087e565b610631565b005b6100d9610729565b6040516100e69190610934565b60405180910390f35b6100f761074f565b73ffffffffffffffffffffffffffffffffffffffff16610115610338565b73ffffffffffffffffffffffffffffffffffffffff161461016b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610162906109ac565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f390610a3e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561026c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026390610aaa565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6102b861074f565b73ffffffffffffffffffffffffffffffffffffffff166102d6610338565b73ffffffffffffffffffffffffffffffffffffffff161461032c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610323906109ac565b60405180910390fd5b6103366000610757565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ea90610b16565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561045d57600080fd5b505afa158015610471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104959190610b6f565b60ff16600a6104a49190610d08565b6103e86104b19190610d53565b905080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161050f91906108ba565b60206040518083038186803b15801561052757600080fd5b505afa15801561053b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055f9190610dd9565b1061059f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059690610e52565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016105fc929190610e81565b600060405180830381600087803b15801561061657600080fd5b505af115801561062a573d6000803e3d6000fd5b5050505050565b61063961074f565b73ffffffffffffffffffffffffffffffffffffffff16610657610338565b73ffffffffffffffffffffffffffffffffffffffff16146106ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a4906109ac565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561071d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071490610f1c565b60405180910390fd5b61072681610757565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061084b82610820565b9050919050565b61085b81610840565b811461086657600080fd5b50565b60008135905061087881610852565b92915050565b6000602082840312156108945761089361081b565b5b60006108a284828501610869565b91505092915050565b6108b481610840565b82525050565b60006020820190506108cf60008301846108ab565b92915050565b6000819050919050565b60006108fa6108f56108f084610820565b6108d5565b610820565b9050919050565b600061090c826108df565b9050919050565b600061091e82610901565b9050919050565b61092e81610913565b82525050565b60006020820190506109496000830184610925565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061099660208361094f565b91506109a182610960565b602082019050919050565b600060208201905081810360008301526109c581610989565b9050919050565b7f46756e6374696f6e2063616e20626520696e766f6b6564206f6e6c79206f6e6360008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b6000610a2860218361094f565b9150610a33826109cc565b604082019050919050565b60006020820190508181036000830152610a5781610a1b565b9050919050565b7f496e76616c696420746f6b656e20636f6e747261637420616464726573730000600082015250565b6000610a94601e8361094f565b9150610a9f82610a5e565b602082019050919050565b60006020820190508181036000830152610ac381610a87565b9050919050565b7f546f6b656e20636f6e747261637420686173206e6f74206265656e2073657400600082015250565b6000610b00601f8361094f565b9150610b0b82610aca565b602082019050919050565b60006020820190508181036000830152610b2f81610af3565b9050919050565b600060ff82169050919050565b610b4c81610b36565b8114610b5757600080fd5b50565b600081519050610b6981610b43565b92915050565b600060208284031215610b8557610b8461081b565b5b6000610b9384828501610b5a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115610c2257808604811115610bfe57610bfd610b9c565b5b6001851615610c0d5780820291505b8081029050610c1b85610bcb565b9450610be2565b94509492505050565b600082610c3b5760019050610cf7565b81610c495760009050610cf7565b8160018114610c5f5760028114610c6957610c98565b6001915050610cf7565b60ff841115610c7b57610c7a610b9c565b5b8360020a915084821115610c9257610c91610b9c565b5b50610cf7565b5060208310610133831016604e8410600b8410161715610ccd5782820a905083811115610cc857610cc7610b9c565b5b610cf7565b610cda8484846001610bd8565b92509050818404811115610cf157610cf0610b9c565b5b81810290505b9392505050565b6000819050919050565b6000610d1382610cfe565b9150610d1e83610cfe565b9250610d4b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610c2b565b905092915050565b6000610d5e82610cfe565b9150610d6983610cfe565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610da257610da1610b9c565b5b828202905092915050565b610db681610cfe565b8114610dc157600080fd5b50565b600081519050610dd381610dad565b92915050565b600060208284031215610def57610dee61081b565b5b6000610dfd84828501610dc4565b91505092915050565b7f43616e6e6f742061637175697265206d6f72652066756e647300000000000000600082015250565b6000610e3c60198361094f565b9150610e4782610e06565b602082019050919050565b60006020820190508181036000830152610e6b81610e2f565b9050919050565b610e7b81610cfe565b82525050565b6000604082019050610e9660008301856108ab565b610ea36020830184610e72565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610f0660268361094f565b9150610f1182610eaa565b604082019050919050565b60006020820190508181036000830152610f3581610ef9565b905091905056fea26469706673582212206c70f303887eee1840bb791e12d5b5126d250d8169d40c640c1196d1e9ffdc4864736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13354:69",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:69",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:69",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:69"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:69"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:69",
                "type": ""
              }
            ],
            "src": "7:75:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:69",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:69",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:69",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:69"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:69",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:69",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:69",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:69"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:69",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:69"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:69"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:69",
                "type": ""
              }
            ],
            "src": "334:126:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:69"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:69"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:69"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:69",
                "type": ""
              }
            ],
            "src": "466:96:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:69",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:69",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:69",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:69"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:69"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:69"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:69"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:69"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:69"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:69"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:69"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:69"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:69",
                "type": ""
              }
            ],
            "src": "568:122:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:69"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:69"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:69"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:69"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:69",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:69",
                "type": ""
              }
            ],
            "src": "696:139:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:69",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:69"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:69"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:69"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:69"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:69"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:69"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:69",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:69",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:69",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:69",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:69",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:69"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:69"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:69"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:69"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:69"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:69"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:69"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:69",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:69",
                "type": ""
              }
            ],
            "src": "841:329:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1241:53:69",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1258:3:69"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1281:5:69"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1263:17:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1263:24:69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1251:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:37:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1251:37:69"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1229:5:69",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1236:3:69",
                "type": ""
              }
            ],
            "src": "1176:118:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1398:124:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1408:26:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1420:9:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1431:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1416:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1416:18:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1408:4:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1488:6:69"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1501:9:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1512:1:69",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1497:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1497:17:69"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1444:43:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1444:71:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1444:71:69"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1370:9:69",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1382:6:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1393:4:69",
                "type": ""
              }
            ],
            "src": "1300:222:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1560:28:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1570:12:69",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1577:5:69"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1570:3:69"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1546:5:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "1556:3:69",
                "type": ""
              }
            ],
            "src": "1528:60:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1654:82:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1664:66:69",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1722:5:69"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "1704:17:69"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1704:24:69"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "1695:8:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1695:34:69"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1677:17:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1677:53:69"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1664:9:69"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1634:5:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1644:9:69",
                "type": ""
              }
            ],
            "src": "1594:142:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1802:66:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1812:50:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1856:5:69"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1825:30:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1825:37:69"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1812:9:69"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1782:5:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1792:9:69",
                "type": ""
              }
            ],
            "src": "1742:126:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1947:66:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1957:50:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2001:5:69"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1970:30:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1970:37:69"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1957:9:69"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_AKX_$11166_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1927:5:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1937:9:69",
                "type": ""
              }
            ],
            "src": "1874:139:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2097:79:69",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2114:3:69"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2163:5:69"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_AKX_$11166_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2119:43:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2119:50:69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2107:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2107:63:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2107:63:69"
                }
              ]
            },
            "name": "abi_encode_t_contract$_AKX_$11166_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2085:5:69",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2092:3:69",
                "type": ""
              }
            ],
            "src": "2019:157:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2293:137:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2303:26:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2315:9:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2326:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2311:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2311:18:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2303:4:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2396:6:69"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2409:9:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2420:1:69",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2405:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2405:17:69"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_AKX_$11166_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2339:56:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2339:84:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2339:84:69"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_AKX_$11166__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2265:9:69",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2277:6:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2288:4:69",
                "type": ""
              }
            ],
            "src": "2182:248:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2532:73:69",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2549:3:69"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2554:6:69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2542:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2542:19:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2542:19:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2570:29:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2589:3:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2594:4:69",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2585:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2585:14:69"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2570:11:69"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2504:3:69",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2509:6:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2520:11:69",
                "type": ""
              }
            ],
            "src": "2436:169:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2717:76:69",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2739:6:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2747:1:69",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2735:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2735:14:69"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2751:34:69",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2728:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2728:58:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2728:58:69"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2709:6:69",
                "type": ""
              }
            ],
            "src": "2611:182:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2945:220:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2955:74:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3021:3:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3026:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2962:58:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2962:67:69"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2955:3:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3127:3:69"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "3038:88:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3038:93:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3038:93:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3140:19:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3151:3:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3156:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3147:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3147:12:69"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3140:3:69"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2933:3:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2941:3:69",
                "type": ""
              }
            ],
            "src": "2799:366:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3342:248:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3352:26:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3364:9:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3375:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3360:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3360:18:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3352:4:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3399:9:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3410:1:69",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3395:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3395:17:69"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3418:4:69"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3424:9:69"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3414:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3414:20:69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3388:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3388:47:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3388:47:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3444:139:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3578:4:69"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3452:124:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3452:131:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3444:4:69"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3322:9:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3337:4:69",
                "type": ""
              }
            ],
            "src": "3171:419:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3702:114:69",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3724:6:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3732:1:69",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3720:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3720:14:69"
                      },
                      {
                        "hexValue": "46756e6374696f6e2063616e20626520696e766f6b6564206f6e6c79206f6e63",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3736:34:69",
                        "type": "",
                        "value": "Function can be invoked only onc"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3713:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3713:58:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3713:58:69"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3792:6:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3800:2:69",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3788:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3788:15:69"
                      },
                      {
                        "hexValue": "65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3805:3:69",
                        "type": "",
                        "value": "e"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3781:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3781:28:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3781:28:69"
                }
              ]
            },
            "name": "store_literal_in_memory_2051a8e2d4cfa54558cc38ad478fae354285eb958130a7f9cfc780318ec8c659",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3694:6:69",
                "type": ""
              }
            ],
            "src": "3596:220:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3968:220:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3978:74:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4044:3:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4049:2:69",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3985:58:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3985:67:69"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3978:3:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4150:3:69"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_2051a8e2d4cfa54558cc38ad478fae354285eb958130a7f9cfc780318ec8c659",
                      "nodeType": "YulIdentifier",
                      "src": "4061:88:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4061:93:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4061:93:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4163:19:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4174:3:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4179:2:69",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4170:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4170:12:69"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4163:3:69"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_2051a8e2d4cfa54558cc38ad478fae354285eb958130a7f9cfc780318ec8c659_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3956:3:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3964:3:69",
                "type": ""
              }
            ],
            "src": "3822:366:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4365:248:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4375:26:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4387:9:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4398:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4383:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4383:18:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4375:4:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4422:9:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4433:1:69",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4418:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4418:17:69"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4441:4:69"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4447:9:69"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4437:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4437:20:69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4411:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4411:47:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4411:47:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4467:139:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4601:4:69"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_2051a8e2d4cfa54558cc38ad478fae354285eb958130a7f9cfc780318ec8c659_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4475:124:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4475:131:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4467:4:69"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2051a8e2d4cfa54558cc38ad478fae354285eb958130a7f9cfc780318ec8c659__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4345:9:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4360:4:69",
                "type": ""
              }
            ],
            "src": "4194:419:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4725:74:69",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4747:6:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4755:1:69",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4743:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4743:14:69"
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e20636f6e74726163742061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4759:32:69",
                        "type": "",
                        "value": "Invalid token contract address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4736:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4736:56:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4736:56:69"
                }
              ]
            },
            "name": "store_literal_in_memory_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4717:6:69",
                "type": ""
              }
            ],
            "src": "4619:180:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4951:220:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4961:74:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5027:3:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5032:2:69",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4968:58:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4968:67:69"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4961:3:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5133:3:69"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1",
                      "nodeType": "YulIdentifier",
                      "src": "5044:88:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5044:93:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5044:93:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5146:19:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5157:3:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5162:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5153:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5153:12:69"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5146:3:69"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4939:3:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4947:3:69",
                "type": ""
              }
            ],
            "src": "4805:366:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5348:248:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5358:26:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5370:9:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5381:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5366:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5366:18:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5358:4:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5405:9:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5416:1:69",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5401:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5401:17:69"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5424:4:69"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5430:9:69"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5420:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5420:20:69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5394:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5394:47:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5394:47:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5450:139:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5584:4:69"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5458:124:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5458:131:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5450:4:69"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5328:9:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5343:4:69",
                "type": ""
              }
            ],
            "src": "5177:419:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5708:75:69",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5730:6:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5738:1:69",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5726:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5726:14:69"
                      },
                      {
                        "hexValue": "546f6b656e20636f6e747261637420686173206e6f74206265656e20736574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5742:33:69",
                        "type": "",
                        "value": "Token contract has not been set"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5719:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5719:57:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5719:57:69"
                }
              ]
            },
            "name": "store_literal_in_memory_1b51b0945d6bd79460fef28524bd99d69bc44c37389c802a8373178881086648",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5700:6:69",
                "type": ""
              }
            ],
            "src": "5602:181:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5935:220:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5945:74:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6011:3:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6016:2:69",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5952:58:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5952:67:69"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5945:3:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6117:3:69"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_1b51b0945d6bd79460fef28524bd99d69bc44c37389c802a8373178881086648",
                      "nodeType": "YulIdentifier",
                      "src": "6028:88:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6028:93:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6028:93:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6130:19:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6141:3:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6146:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6137:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6137:12:69"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6130:3:69"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_1b51b0945d6bd79460fef28524bd99d69bc44c37389c802a8373178881086648_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5923:3:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5931:3:69",
                "type": ""
              }
            ],
            "src": "5789:366:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6332:248:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6342:26:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6354:9:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6365:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6350:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6350:18:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6342:4:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6389:9:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6400:1:69",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6385:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6385:17:69"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6408:4:69"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6414:9:69"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6404:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6404:20:69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6378:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6378:47:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6378:47:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6434:139:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6568:4:69"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_1b51b0945d6bd79460fef28524bd99d69bc44c37389c802a8373178881086648_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6442:124:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6442:131:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6434:4:69"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1b51b0945d6bd79460fef28524bd99d69bc44c37389c802a8373178881086648__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6312:9:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6327:4:69",
                "type": ""
              }
            ],
            "src": "6161:419:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6629:43:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6639:27:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6654:5:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6661:4:69",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6650:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6650:16:69"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6639:7:69"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6611:5:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6621:7:69",
                "type": ""
              }
            ],
            "src": "6586:86:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6719:77:69",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6774:16:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6783:1:69",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6786:1:69",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6776:6:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6776:12:69"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6776:12:69"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6742:5:69"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6765:5:69"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint8",
                              "nodeType": "YulIdentifier",
                              "src": "6749:15:69"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6749:22:69"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6739:2:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6739:33:69"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6732:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6732:41:69"
                  },
                  "nodeType": "YulIf",
                  "src": "6729:61:69"
                }
              ]
            },
            "name": "validator_revert_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6712:5:69",
                "type": ""
              }
            ],
            "src": "6678:118:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6863:78:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6873:22:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6888:6:69"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6882:5:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6882:13:69"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "6873:5:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6929:5:69"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "6904:24:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6904:31:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6904:31:69"
                }
              ]
            },
            "name": "abi_decode_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "6841:6:69",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6849:3:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6857:5:69",
                "type": ""
              }
            ],
            "src": "6802:139:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7022:272:69",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7068:83:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "7070:77:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7070:79:69"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7070:79:69"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7043:7:69"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7052:9:69"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7039:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7039:23:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7064:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7035:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7035:32:69"
                  },
                  "nodeType": "YulIf",
                  "src": "7032:119:69"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7161:126:69",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7176:15:69",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7190:1:69",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7180:6:69",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7205:72:69",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7249:9:69"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7260:6:69"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7245:3:69"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7245:22:69"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7269:7:69"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint8_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "7215:29:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7215:62:69"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7205:6:69"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6992:9:69",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7003:7:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7015:6:69",
                "type": ""
              }
            ],
            "src": "6947:347:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7328:152:69",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7345:1:69",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7348:77:69",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7338:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7338:88:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7338:88:69"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7442:1:69",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7445:4:69",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7435:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7435:15:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7435:15:69"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7466:1:69",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7469:4:69",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7459:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7459:15:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7459:15:69"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7300:180:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7537:51:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7547:34:69",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7572:1:69",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7575:5:69"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "7568:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7568:13:69"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "7547:8:69"
                    }
                  ]
                }
              ]
            },
            "name": "shift_right_1_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7518:5:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "7528:8:69",
                "type": ""
              }
            ],
            "src": "7486:102:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7667:775:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7677:15:69",
                  "value": {
                    "name": "_power",
                    "nodeType": "YulIdentifier",
                    "src": "7686:6:69"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "7677:5:69"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7701:14:69",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "7710:5:69"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "7701:4:69"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7759:677:69",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7847:22:69",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "7849:16:69"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7849:18:69"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7849:18:69"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "7825:4:69"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "7835:3:69"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "7840:4:69"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "7831:3:69"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7831:14:69"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "7822:2:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7822:24:69"
                        },
                        "nodeType": "YulIf",
                        "src": "7819:50:69"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7914:419:69",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8294:25:69",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "8307:5:69"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "8314:4:69"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "8303:3:69"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8303:16:69"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "8294:5:69"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "7889:8:69"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7899:1:69",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "7885:3:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7885:16:69"
                        },
                        "nodeType": "YulIf",
                        "src": "7882:451:69"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8346:23:69",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "8358:4:69"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "8364:4:69"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "8354:3:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8354:15:69"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "8346:4:69"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8382:44:69",
                        "value": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "8417:8:69"
                            }
                          ],
                          "functionName": {
                            "name": "shift_right_1_unsigned",
                            "nodeType": "YulIdentifier",
                            "src": "8394:22:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8394:32:69"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "8382:8:69"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "7735:8:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7745:1:69",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7732:2:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7732:15:69"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "7748:2:69",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "7728:3:69",
                    "statements": []
                  },
                  "src": "7724:712:69"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_power",
                "nodeType": "YulTypedName",
                "src": "7622:6:69",
                "type": ""
              },
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "7630:5:69",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "7637:8:69",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "7647:3:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "7655:5:69",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "7662:4:69",
                "type": ""
              }
            ],
            "src": "7594:848:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8508:1013:69",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8703:20:69",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8705:10:69",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "8714:1:69",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "8705:5:69"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "8716:5:69"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "8693:8:69"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8686:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8686:16:69"
                  },
                  "nodeType": "YulIf",
                  "src": "8683:40:69"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8748:20:69",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8750:10:69",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "8759:1:69",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "8750:5:69"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "8761:5:69"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "8742:4:69"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8735:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8735:12:69"
                  },
                  "nodeType": "YulIf",
                  "src": "8732:36:69"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8878:20:69",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "8880:10:69",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8889:1:69",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "8880:5:69"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "8891:5:69"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "8871:27:69",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8876:1:69",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8922:176:69",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "8957:22:69",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "8959:16:69"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8959:18:69"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "8959:18:69"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "8942:8:69"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8952:3:69",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "8939:2:69"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8939:17:69"
                            },
                            "nodeType": "YulIf",
                            "src": "8936:43:69"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "8992:25:69",
                            "value": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9005:1:69",
                                  "type": "",
                                  "value": "2"
                                },
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "9008:8:69"
                                }
                              ],
                              "functionName": {
                                "name": "exp",
                                "nodeType": "YulIdentifier",
                                "src": "9001:3:69"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9001:16:69"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "8992:5:69"
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "9048:22:69",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "9050:16:69"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9050:18:69"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "9050:18:69"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "9036:5:69"
                                },
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "9043:3:69"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "9033:2:69"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9033:14:69"
                            },
                            "nodeType": "YulIf",
                            "src": "9030:40:69"
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "9083:5:69"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "8907:191:69",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8912:1:69",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "8828:4:69"
                  },
                  "nodeType": "YulSwitch",
                  "src": "8821:277:69"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9230:123:69",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9244:28:69",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "9257:4:69"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "9263:8:69"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "9253:3:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9253:19:69"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "9244:5:69"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9303:22:69",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "9305:16:69"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9305:18:69"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9305:18:69"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "power",
                              "nodeType": "YulIdentifier",
                              "src": "9291:5:69"
                            },
                            {
                              "name": "max",
                              "nodeType": "YulIdentifier",
                              "src": "9298:3:69"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "9288:2:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9288:14:69"
                        },
                        "nodeType": "YulIf",
                        "src": "9285:40:69"
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "9338:5:69"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "9133:4:69"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9139:2:69",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "9130:2:69"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9130:12:69"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "9147:8:69"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9157:2:69",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "9144:2:69"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9144:16:69"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9126:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9126:35:69"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "9182:4:69"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9188:3:69",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "9179:2:69"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9179:13:69"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "9197:8:69"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9207:2:69",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "9194:2:69"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9194:16:69"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9175:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9175:36:69"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "9110:2:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9110:111:69"
                  },
                  "nodeType": "YulIf",
                  "src": "9107:246:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9363:57:69",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9397:1:69",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "9400:4:69"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "9406:8:69"
                      },
                      {
                        "name": "max",
                        "nodeType": "YulIdentifier",
                        "src": "9416:3:69"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "9378:18:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9378:42:69"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "9363:5:69"
                    },
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "9370:4:69"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9459:22:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9461:16:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9461:18:69"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9461:18:69"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power",
                        "nodeType": "YulIdentifier",
                        "src": "9436:5:69"
                      },
                      {
                        "arguments": [
                          {
                            "name": "max",
                            "nodeType": "YulIdentifier",
                            "src": "9447:3:69"
                          },
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "9452:4:69"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "9443:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9443:14:69"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9433:2:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9433:25:69"
                  },
                  "nodeType": "YulIf",
                  "src": "9430:51:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9490:25:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "power",
                        "nodeType": "YulIdentifier",
                        "src": "9503:5:69"
                      },
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "9510:4:69"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "9499:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9499:16:69"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "9490:5:69"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "8478:4:69",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "8484:8:69",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "8494:3:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "8502:5:69",
                "type": ""
              }
            ],
            "src": "8448:1073:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9572:32:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9582:16:69",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9593:5:69"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9582:7:69"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9554:5:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9564:7:69",
                "type": ""
              }
            ],
            "src": "9527:77:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9676:219:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9686:31:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "9712:4:69"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9694:17:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9694:23:69"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "9686:4:69"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9726:39:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "9756:8:69"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9738:17:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9738:27:69"
                  },
                  "variableNames": [
                    {
                      "name": "exponent",
                      "nodeType": "YulIdentifier",
                      "src": "9726:8:69"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9775:113:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "9805:4:69"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "9811:8:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9821:66:69",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "9784:20:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9784:104:69"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "9775:5:69"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "9651:4:69",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "9657:8:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "9670:5:69",
                "type": ""
              }
            ],
            "src": "9610:285:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9949:300:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9959:25:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9982:1:69"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9964:17:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9964:20:69"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "9959:1:69"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9993:25:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10016:1:69"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9998:17:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9998:20:69"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "9993:1:69"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10191:22:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10193:16:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10193:18:69"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10193:18:69"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10103:1:69"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "10096:6:69"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10096:9:69"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "10089:6:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10089:17:69"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10111:1:69"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10118:66:69",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10186:1:69"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "10114:3:69"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10114:74:69"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10108:2:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10108:81:69"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10085:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10085:105:69"
                  },
                  "nodeType": "YulIf",
                  "src": "10082:131:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10223:20:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10238:1:69"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10241:1:69"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "10234:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10234:9:69"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "10223:7:69"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9932:1:69",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9935:1:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "9941:7:69",
                "type": ""
              }
            ],
            "src": "9901:348:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10298:79:69",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10355:16:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10364:1:69",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10367:1:69",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10357:6:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10357:12:69"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10357:12:69"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10321:5:69"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10346:5:69"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "10328:17:69"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10328:24:69"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10318:2:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10318:35:69"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10311:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10311:43:69"
                  },
                  "nodeType": "YulIf",
                  "src": "10308:63:69"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10291:5:69",
                "type": ""
              }
            ],
            "src": "10255:122:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10446:80:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10456:22:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "10471:6:69"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10465:5:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10465:13:69"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "10456:5:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10514:5:69"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10487:26:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10487:33:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10487:33:69"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "10424:6:69",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10432:3:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10440:5:69",
                "type": ""
              }
            ],
            "src": "10383:143:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10609:274:69",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10655:83:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "10657:77:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10657:79:69"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10657:79:69"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10630:7:69"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10639:9:69"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10626:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10626:23:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10651:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10622:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10622:32:69"
                  },
                  "nodeType": "YulIf",
                  "src": "10619:119:69"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10748:128:69",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10763:15:69",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10777:1:69",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10767:6:69",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10792:74:69",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10838:9:69"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10849:6:69"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10834:3:69"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10834:22:69"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10858:7:69"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10802:31:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10802:64:69"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "10792:6:69"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10579:9:69",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10590:7:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10602:6:69",
                "type": ""
              }
            ],
            "src": "10532:351:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10995:69:69",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11017:6:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11025:1:69",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11013:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11013:14:69"
                      },
                      {
                        "hexValue": "43616e6e6f742061637175697265206d6f72652066756e6473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11029:27:69",
                        "type": "",
                        "value": "Cannot acquire more funds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11006:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11006:51:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11006:51:69"
                }
              ]
            },
            "name": "store_literal_in_memory_b2cce4c582a32170b043ae452e4960b198c003d2c23c745308adb8e3f7d53f53",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10987:6:69",
                "type": ""
              }
            ],
            "src": "10889:175:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11216:220:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11226:74:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11292:3:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11297:2:69",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11233:58:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11233:67:69"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11226:3:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11398:3:69"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b2cce4c582a32170b043ae452e4960b198c003d2c23c745308adb8e3f7d53f53",
                      "nodeType": "YulIdentifier",
                      "src": "11309:88:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11309:93:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11309:93:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11411:19:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11422:3:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11427:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11418:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11418:12:69"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11411:3:69"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b2cce4c582a32170b043ae452e4960b198c003d2c23c745308adb8e3f7d53f53_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11204:3:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11212:3:69",
                "type": ""
              }
            ],
            "src": "11070:366:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11613:248:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11623:26:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11635:9:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11646:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11631:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11631:18:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11623:4:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11670:9:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11681:1:69",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11666:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11666:17:69"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11689:4:69"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11695:9:69"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11685:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11685:20:69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11659:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11659:47:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11659:47:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11715:139:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11849:4:69"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b2cce4c582a32170b043ae452e4960b198c003d2c23c745308adb8e3f7d53f53_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11723:124:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11723:131:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11715:4:69"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b2cce4c582a32170b043ae452e4960b198c003d2c23c745308adb8e3f7d53f53__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11593:9:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11608:4:69",
                "type": ""
              }
            ],
            "src": "11442:419:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11932:53:69",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11949:3:69"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11972:5:69"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "11954:17:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11954:24:69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11942:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11942:37:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11942:37:69"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11920:5:69",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11927:3:69",
                "type": ""
              }
            ],
            "src": "11867:118:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12117:206:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12127:26:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12139:9:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12150:2:69",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12135:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12135:18:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12127:4:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12207:6:69"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12220:9:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12231:1:69",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12216:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12216:17:69"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12163:43:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12163:71:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12163:71:69"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12288:6:69"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12301:9:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12312:2:69",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12297:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12297:18:69"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12244:43:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12244:72:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12244:72:69"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12081:9:69",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12093:6:69",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12101:6:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12112:4:69",
                "type": ""
              }
            ],
            "src": "11991:332:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12435:119:69",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12457:6:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12465:1:69",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12453:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12453:14:69"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12469:34:69",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12446:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12446:58:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12446:58:69"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12525:6:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12533:2:69",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12521:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12521:15:69"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12538:8:69",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12514:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12514:33:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12514:33:69"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12427:6:69",
                "type": ""
              }
            ],
            "src": "12329:225:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12706:220:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12716:74:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12782:3:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12787:2:69",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12723:58:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12723:67:69"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12716:3:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12888:3:69"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "12799:88:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12799:93:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12799:93:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12901:19:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12912:3:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12917:2:69",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12908:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12908:12:69"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12901:3:69"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12694:3:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12702:3:69",
                "type": ""
              }
            ],
            "src": "12560:366:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13103:248:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13113:26:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13125:9:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13136:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13121:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13121:18:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13113:4:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13160:9:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13171:1:69",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13156:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13156:17:69"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13179:4:69"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13185:9:69"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13175:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13175:20:69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13149:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13149:47:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13149:47:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13205:139:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13339:4:69"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13213:124:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13213:131:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13205:4:69"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13083:9:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13098:4:69",
                "type": ""
              }
            ],
            "src": "12932:419:69"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_AKX_$11166_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AKX_$11166_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AKX_$11166_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AKX_$11166__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AKX_$11166_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2051a8e2d4cfa54558cc38ad478fae354285eb958130a7f9cfc780318ec8c659(memPtr) {\n\n        mstore(add(memPtr, 0), \"Function can be invoked only onc\")\n\n        mstore(add(memPtr, 32), \"e\")\n\n    }\n\n    function abi_encode_t_stringliteral_2051a8e2d4cfa54558cc38ad478fae354285eb958130a7f9cfc780318ec8c659_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_2051a8e2d4cfa54558cc38ad478fae354285eb958130a7f9cfc780318ec8c659(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2051a8e2d4cfa54558cc38ad478fae354285eb958130a7f9cfc780318ec8c659__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2051a8e2d4cfa54558cc38ad478fae354285eb958130a7f9cfc780318ec8c659_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token contract address\")\n\n    }\n\n    function abi_encode_t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1b51b0945d6bd79460fef28524bd99d69bc44c37389c802a8373178881086648(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token contract has not been set\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b51b0945d6bd79460fef28524bd99d69bc44c37389c802a8373178881086648_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1b51b0945d6bd79460fef28524bd99d69bc44c37389c802a8373178881086648(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b51b0945d6bd79460fef28524bd99d69bc44c37389c802a8373178881086648__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b51b0945d6bd79460fef28524bd99d69bc44c37389c802a8373178881086648_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_b2cce4c582a32170b043ae452e4960b198c003d2c23c745308adb8e3f7d53f53(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot acquire more funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_b2cce4c582a32170b043ae452e4960b198c003d2c23c745308adb8e3f7d53f53_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_b2cce4c582a32170b043ae452e4960b198c003d2c23c745308adb8e3f7d53f53(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b2cce4c582a32170b043ae452e4960b198c003d2c23c745308adb8e3f7d53f53__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b2cce4c582a32170b043ae452e4960b198c003d2c23c745308adb8e3f7d53f53_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 69,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "130:686:61:-:0;;;;;;;;;;;;;921:32:32;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;130:686:61;;640:96:44;693:7;719:10;712:17;;640:96;:::o;2270:187:32:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;130:686:61:-;;;;;;;",
  "deployedSourceMap": "130:686:61:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;189:310;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:32;;;:::i;:::-;;1036:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;505:309:61;;;:::i;:::-;;1918:198:32;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;167:16:61;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;189:310;1259:12:32;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;320:1:61::1;294:28;;302:5;;;;;;;;;;;294:28;;;286:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;425:1;407:20;;:6;:20;;;;399:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;485:6;473:5;;:19;;;;;;;;;;;;;;;;;;189:310:::0;:::o;1668:101:32:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;505:309:61:-;576:1;550:28;;558:5;;;;;;;;;;;550:28;;;;542:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;624:14;662:5;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;654:25;;648:2;:31;;;;:::i;:::-;641:4;:38;;;;:::i;:::-;624:55;;724:6;693:5;;;;;;;;;;;:15;;;709:10;693:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;689:78;;732:35;;;;;;;;;;:::i;:::-;;;;;;;;689:78;777:5;;;;;;;;;;;:10;;;788;800:6;777:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;532:282;505:309::o;1918:198:32:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;167:16:61:-;;;;;;;;;;;;;:::o;640:96:44:-;693:7;719:10;712:17;;640:96;:::o;2270:187:32:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;88:117:69:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o;1528:60::-;1556:3;1577:5;1570:12;;1528:60;;;:::o;1594:142::-;1644:9;1677:53;1695:34;1704:24;1722:5;1704:24;:::i;:::-;1695:34;:::i;:::-;1677:53;:::i;:::-;1664:66;;1594:142;;;:::o;1742:126::-;1792:9;1825:37;1856:5;1825:37;:::i;:::-;1812:50;;1742:126;;;:::o;1874:139::-;1937:9;1970:37;2001:5;1970:37;:::i;:::-;1957:50;;1874:139;;;:::o;2019:157::-;2119:50;2163:5;2119:50;:::i;:::-;2114:3;2107:63;2019:157;;:::o;2182:248::-;2288:4;2326:2;2315:9;2311:18;2303:26;;2339:84;2420:1;2409:9;2405:17;2396:6;2339:84;:::i;:::-;2182:248;;;;:::o;2436:169::-;2520:11;2554:6;2549:3;2542:19;2594:4;2589:3;2585:14;2570:29;;2436:169;;;;:::o;2611:182::-;2751:34;2747:1;2739:6;2735:14;2728:58;2611:182;:::o;2799:366::-;2941:3;2962:67;3026:2;3021:3;2962:67;:::i;:::-;2955:74;;3038:93;3127:3;3038:93;:::i;:::-;3156:2;3151:3;3147:12;3140:19;;2799:366;;;:::o;3171:419::-;3337:4;3375:2;3364:9;3360:18;3352:26;;3424:9;3418:4;3414:20;3410:1;3399:9;3395:17;3388:47;3452:131;3578:4;3452:131;:::i;:::-;3444:139;;3171:419;;;:::o;3596:220::-;3736:34;3732:1;3724:6;3720:14;3713:58;3805:3;3800:2;3792:6;3788:15;3781:28;3596:220;:::o;3822:366::-;3964:3;3985:67;4049:2;4044:3;3985:67;:::i;:::-;3978:74;;4061:93;4150:3;4061:93;:::i;:::-;4179:2;4174:3;4170:12;4163:19;;3822:366;;;:::o;4194:419::-;4360:4;4398:2;4387:9;4383:18;4375:26;;4447:9;4441:4;4437:20;4433:1;4422:9;4418:17;4411:47;4475:131;4601:4;4475:131;:::i;:::-;4467:139;;4194:419;;;:::o;4619:180::-;4759:32;4755:1;4747:6;4743:14;4736:56;4619:180;:::o;4805:366::-;4947:3;4968:67;5032:2;5027:3;4968:67;:::i;:::-;4961:74;;5044:93;5133:3;5044:93;:::i;:::-;5162:2;5157:3;5153:12;5146:19;;4805:366;;;:::o;5177:419::-;5343:4;5381:2;5370:9;5366:18;5358:26;;5430:9;5424:4;5420:20;5416:1;5405:9;5401:17;5394:47;5458:131;5584:4;5458:131;:::i;:::-;5450:139;;5177:419;;;:::o;5602:181::-;5742:33;5738:1;5730:6;5726:14;5719:57;5602:181;:::o;5789:366::-;5931:3;5952:67;6016:2;6011:3;5952:67;:::i;:::-;5945:74;;6028:93;6117:3;6028:93;:::i;:::-;6146:2;6141:3;6137:12;6130:19;;5789:366;;;:::o;6161:419::-;6327:4;6365:2;6354:9;6350:18;6342:26;;6414:9;6408:4;6404:20;6400:1;6389:9;6385:17;6378:47;6442:131;6568:4;6442:131;:::i;:::-;6434:139;;6161:419;;;:::o;6586:86::-;6621:7;6661:4;6654:5;6650:16;6639:27;;6586:86;;;:::o;6678:118::-;6749:22;6765:5;6749:22;:::i;:::-;6742:5;6739:33;6729:61;;6786:1;6783;6776:12;6729:61;6678:118;:::o;6802:139::-;6857:5;6888:6;6882:13;6873:22;;6904:31;6929:5;6904:31;:::i;:::-;6802:139;;;;:::o;6947:347::-;7015:6;7064:2;7052:9;7043:7;7039:23;7035:32;7032:119;;;7070:79;;:::i;:::-;7032:119;7190:1;7215:62;7269:7;7260:6;7249:9;7245:22;7215:62;:::i;:::-;7205:72;;7161:126;6947:347;;;;:::o;7300:180::-;7348:77;7345:1;7338:88;7445:4;7442:1;7435:15;7469:4;7466:1;7459:15;7486:102;7528:8;7575:5;7572:1;7568:13;7547:34;;7486:102;;;:::o;7594:848::-;7655:5;7662:4;7686:6;7677:15;;7710:5;7701:14;;7724:712;7745:1;7735:8;7732:15;7724:712;;;7840:4;7835:3;7831:14;7825:4;7822:24;7819:50;;;7849:18;;:::i;:::-;7819:50;7899:1;7889:8;7885:16;7882:451;;;8314:4;8307:5;8303:16;8294:25;;7882:451;8364:4;8358;8354:15;8346:23;;8394:32;8417:8;8394:32;:::i;:::-;8382:44;;7724:712;;;7594:848;;;;;;;:::o;8448:1073::-;8502:5;8693:8;8683:40;;8714:1;8705:10;;8716:5;;8683:40;8742:4;8732:36;;8759:1;8750:10;;8761:5;;8732:36;8828:4;8876:1;8871:27;;;;8912:1;8907:191;;;;8821:277;;8871:27;8889:1;8880:10;;8891:5;;;8907:191;8952:3;8942:8;8939:17;8936:43;;;8959:18;;:::i;:::-;8936:43;9008:8;9005:1;9001:16;8992:25;;9043:3;9036:5;9033:14;9030:40;;;9050:18;;:::i;:::-;9030:40;9083:5;;;8821:277;;9207:2;9197:8;9194:16;9188:3;9182:4;9179:13;9175:36;9157:2;9147:8;9144:16;9139:2;9133:4;9130:12;9126:35;9110:111;9107:246;;;9263:8;9257:4;9253:19;9244:28;;9298:3;9291:5;9288:14;9285:40;;;9305:18;;:::i;:::-;9285:40;9338:5;;9107:246;9378:42;9416:3;9406:8;9400:4;9397:1;9378:42;:::i;:::-;9363:57;;;;9452:4;9447:3;9443:14;9436:5;9433:25;9430:51;;;9461:18;;:::i;:::-;9430:51;9510:4;9503:5;9499:16;9490:25;;8448:1073;;;;;;:::o;9527:77::-;9564:7;9593:5;9582:16;;9527:77;;;:::o;9610:285::-;9670:5;9694:23;9712:4;9694:23;:::i;:::-;9686:31;;9738:27;9756:8;9738:27;:::i;:::-;9726:39;;9784:104;9821:66;9811:8;9805:4;9784:104;:::i;:::-;9775:113;;9610:285;;;;:::o;9901:348::-;9941:7;9964:20;9982:1;9964:20;:::i;:::-;9959:25;;9998:20;10016:1;9998:20;:::i;:::-;9993:25;;10186:1;10118:66;10114:74;10111:1;10108:81;10103:1;10096:9;10089:17;10085:105;10082:131;;;10193:18;;:::i;:::-;10082:131;10241:1;10238;10234:9;10223:20;;9901:348;;;;:::o;10255:122::-;10328:24;10346:5;10328:24;:::i;:::-;10321:5;10318:35;10308:63;;10367:1;10364;10357:12;10308:63;10255:122;:::o;10383:143::-;10440:5;10471:6;10465:13;10456:22;;10487:33;10514:5;10487:33;:::i;:::-;10383:143;;;;:::o;10532:351::-;10602:6;10651:2;10639:9;10630:7;10626:23;10622:32;10619:119;;;10657:79;;:::i;:::-;10619:119;10777:1;10802:64;10858:7;10849:6;10838:9;10834:22;10802:64;:::i;:::-;10792:74;;10748:128;10532:351;;;;:::o;10889:175::-;11029:27;11025:1;11017:6;11013:14;11006:51;10889:175;:::o;11070:366::-;11212:3;11233:67;11297:2;11292:3;11233:67;:::i;:::-;11226:74;;11309:93;11398:3;11309:93;:::i;:::-;11427:2;11422:3;11418:12;11411:19;;11070:366;;;:::o;11442:419::-;11608:4;11646:2;11635:9;11631:18;11623:26;;11695:9;11689:4;11685:20;11681:1;11670:9;11666:17;11659:47;11723:131;11849:4;11723:131;:::i;:::-;11715:139;;11442:419;;;:::o;11867:118::-;11954:24;11972:5;11954:24;:::i;:::-;11949:3;11942:37;11867:118;;:::o;11991:332::-;12112:4;12150:2;12139:9;12135:18;12127:26;;12163:71;12231:1;12220:9;12216:17;12207:6;12163:71;:::i;:::-;12244:72;12312:2;12301:9;12297:18;12288:6;12244:72;:::i;:::-;11991:332;;;;;:::o;12329:225::-;12469:34;12465:1;12457:6;12453:14;12446:58;12538:8;12533:2;12525:6;12521:15;12514:33;12329:225;:::o;12560:366::-;12702:3;12723:67;12787:2;12782:3;12723:67;:::i;:::-;12716:74;;12799:93;12888:3;12799:93;:::i;:::-;12917:2;12912:3;12908:12;12901:19;;12560:366;;;:::o;12932:419::-;13098:4;13136:2;13125:9;13121:18;13113:26;;13185:9;13179:4;13175:20;13171:1;13160:9;13156:17;13149:47;13213:131;13339:4;13213:131;:::i;:::-;13205:139;;12932:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.9;\n\nimport \"./AKX.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract AKXTFaucet is Ownable {\n    AKX public token;\n    function setAKXT(address _token) external onlyOwner {\n        // can be called only once\n        require(address(token) == address(0), \"Function can be invoked only once\");\n\n        // validate address\n        require(_token != address(0), \"Invalid token contract address\");\n\n        token = AKX(_token);\n    }\n\n    function create() external {\n        require(address(token) != address(0), \"Token contract has not been set\");\n        uint256 tokens = 1000 * 10 ** uint256(token.decimals());\n        if (token.balanceOf(msg.sender) >= tokens) revert(\"Cannot acquire more funds\");\n        token.mint(msg.sender, tokens);\n    }\n}",
  "sourcePath": "/Users/nicolascloutier/Documents/GitHub/akapz-dao/chain/contracts/AKX/AKXTFaucet.sol",
  "ast": {
    "absolutePath": "project:/contracts/AKX/AKXTFaucet.sol",
    "exportedSymbols": {
      "AKX": [
        11166
      ],
      "AKXTFaucet": [
        11263
      ],
      "AccessControl": [
        5560
      ],
      "AccessControlEnumerable": [
        5685
      ],
      "Context": [
        7940
      ],
      "Counters": [
        8014
      ],
      "ECDSA": [
        8624
      ],
      "EIP712": [
        8778
      ],
      "ERC165": [
        8802
      ],
      "ERC20": [
        7007
      ],
      "ERC20Burnable": [
        7129
      ],
      "ERC20Pausable": [
        7166
      ],
      "ERC20Permit": [
        7363
      ],
      "EnumerableSet": [
        9725
      ],
      "IAccessControl": [
        5758
      ],
      "IAccessControlEnumerable": [
        5783
      ],
      "IERC165": [
        8814
      ],
      "IERC20": [
        7085
      ],
      "IERC20Metadata": [
        7191
      ],
      "IERC20Permit": [
        7399
      ],
      "Ownable": [
        5888
      ],
      "Pausable": [
        6421
      ],
      "Strings": [
        8217
      ]
    },
    "id": 11264,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11168,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:61"
      },
      {
        "absolutePath": "project:/contracts/AKX/AKX.sol",
        "file": "./AKX.sol",
        "id": 11169,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11264,
        "sourceUnit": 11167,
        "src": "56:19:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 11170,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11264,
        "sourceUnit": 5889,
        "src": "76:52:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11171,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5888,
              "src": "153:7:61"
            },
            "id": 11172,
            "nodeType": "InheritanceSpecifier",
            "src": "153:7:61"
          }
        ],
        "canonicalName": "AKXTFaucet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 11263,
        "linearizedBaseContracts": [
          11263,
          5888,
          7940
        ],
        "name": "AKXTFaucet",
        "nameLocation": "139:10:61",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 11175,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "178:5:61",
            "nodeType": "VariableDeclaration",
            "scope": 11263,
            "src": "167:16:61",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AKX_$11166",
              "typeString": "contract AKX"
            },
            "typeName": {
              "id": 11174,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11173,
                "name": "AKX",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11166,
                "src": "167:3:61"
              },
              "referencedDeclaration": 11166,
              "src": "167:3:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AKX_$11166",
                "typeString": "contract AKX"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11211,
              "nodeType": "Block",
              "src": "241:258:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 11185,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11175,
                              "src": "302:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AKX_$11166",
                                "typeString": "contract AKX"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AKX_$11166",
                                "typeString": "contract AKX"
                              }
                            ],
                            "id": 11184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "294:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11183,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "294:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "294:14:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "320:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "312:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11187,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "312:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "312:10:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "294:28:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46756e6374696f6e2063616e20626520696e766f6b6564206f6e6c79206f6e6365",
                        "id": 11192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "324:35:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2051a8e2d4cfa54558cc38ad478fae354285eb958130a7f9cfc780318ec8c659",
                          "typeString": "literal_string \"Function can be invoked only once\""
                        },
                        "value": "Function can be invoked only once"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2051a8e2d4cfa54558cc38ad478fae354285eb958130a7f9cfc780318ec8c659",
                          "typeString": "literal_string \"Function can be invoked only once\""
                        }
                      ],
                      "id": 11182,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "286:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "286:74:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11194,
                  "nodeType": "ExpressionStatement",
                  "src": "286:74:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11196,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11177,
                          "src": "407:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "425:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "417:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11197,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "417:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "417:10:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "407:20:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e20636f6e74726163742061646472657373",
                        "id": 11202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "429:32:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1",
                          "typeString": "literal_string \"Invalid token contract address\""
                        },
                        "value": "Invalid token contract address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1",
                          "typeString": "literal_string \"Invalid token contract address\""
                        }
                      ],
                      "id": 11195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "399:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "399:63:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11204,
                  "nodeType": "ExpressionStatement",
                  "src": "399:63:61"
                },
                {
                  "expression": {
                    "id": 11209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11205,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11175,
                      "src": "473:5:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AKX_$11166",
                        "typeString": "contract AKX"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 11207,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11177,
                          "src": "485:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 11206,
                        "name": "AKX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11166,
                        "src": "481:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AKX_$11166_$",
                          "typeString": "type(contract AKX)"
                        }
                      },
                      "id": 11208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "481:11:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AKX_$11166",
                        "typeString": "contract AKX"
                      }
                    },
                    "src": "473:19:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AKX_$11166",
                      "typeString": "contract AKX"
                    }
                  },
                  "id": 11210,
                  "nodeType": "ExpressionStatement",
                  "src": "473:19:61"
                }
              ]
            },
            "functionSelector": "6b318813",
            "id": 11212,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11180,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11179,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5830,
                  "src": "231:9:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "231:9:61"
              }
            ],
            "name": "setAKXT",
            "nameLocation": "198:7:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11177,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "214:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 11212,
                  "src": "206:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "206:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "205:16:61"
            },
            "returnParameters": {
              "id": 11181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "241:0:61"
            },
            "scope": 11263,
            "src": "189:310:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11261,
              "nodeType": "Block",
              "src": "532:282:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 11218,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11175,
                              "src": "558:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AKX_$11166",
                                "typeString": "contract AKX"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AKX_$11166",
                                "typeString": "contract AKX"
                              }
                            ],
                            "id": 11217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "550:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11216,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "550:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "550:14:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "576:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "568:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11220,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "568:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "568:10:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "550:28:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20636f6e747261637420686173206e6f74206265656e20736574",
                        "id": 11225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "580:33:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b51b0945d6bd79460fef28524bd99d69bc44c37389c802a8373178881086648",
                          "typeString": "literal_string \"Token contract has not been set\""
                        },
                        "value": "Token contract has not been set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b51b0945d6bd79460fef28524bd99d69bc44c37389c802a8373178881086648",
                          "typeString": "literal_string \"Token contract has not been set\""
                        }
                      ],
                      "id": 11215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "542:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "542:72:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11227,
                  "nodeType": "ExpressionStatement",
                  "src": "542:72:61"
                },
                {
                  "assignments": [
                    11229
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11229,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "632:6:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 11261,
                      "src": "624:14:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11228,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "624:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11240,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31303030",
                      "id": 11230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "641:4:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 11231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "648:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 11234,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11175,
                                "src": "662:5:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AKX_$11166",
                                  "typeString": "contract AKX"
                                }
                              },
                              "id": 11235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "decimals",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6496,
                              "src": "662:14:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                "typeString": "function () view external returns (uint8)"
                              }
                            },
                            "id": 11236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "662:16:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 11233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "654:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 11232,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "654:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "654:25:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "648:31:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "641:38:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "624:55:61"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 11243,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "709:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "709:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 11241,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11175,
                          "src": "693:5:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AKX_$11166",
                            "typeString": "contract AKX"
                          }
                        },
                        "id": 11242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6520,
                        "src": "693:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 11245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "693:27:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 11246,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11229,
                      "src": "724:6:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "693:37:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11252,
                  "nodeType": "IfStatement",
                  "src": "689:78:61",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "43616e6e6f742061637175697265206d6f72652066756e6473",
                          "id": 11249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "739:27:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b2cce4c582a32170b043ae452e4960b198c003d2c23c745308adb8e3f7d53f53",
                            "typeString": "literal_string \"Cannot acquire more funds\""
                          },
                          "value": "Cannot acquire more funds"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_b2cce4c582a32170b043ae452e4960b198c003d2c23c745308adb8e3f7d53f53",
                            "typeString": "literal_string \"Cannot acquire more funds\""
                          }
                        ],
                        "id": 11248,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "732:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 11250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "732:35:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 11251,
                    "nodeType": "ExpressionStatement",
                    "src": "732:35:61"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11256,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "788:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "788:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11258,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11229,
                        "src": "800:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11253,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11175,
                        "src": "777:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AKX_$11166",
                          "typeString": "contract AKX"
                        }
                      },
                      "id": 11255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11112,
                      "src": "777:10:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 11259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "777:30:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11260,
                  "nodeType": "ExpressionStatement",
                  "src": "777:30:61"
                }
              ]
            },
            "functionSelector": "efc81a8c",
            "id": 11262,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "create",
            "nameLocation": "514:6:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "520:2:61"
            },
            "returnParameters": {
              "id": 11214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "532:0:61"
            },
            "scope": 11263,
            "src": "505:309:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 11264,
        "src": "130:686:61",
        "usedErrors": []
      }
    ],
    "src": "32:784:61"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/AKX/AKXTFaucet.sol",
    "exportedSymbols": {
      "AKX": [
        11166
      ],
      "AKXTFaucet": [
        11263
      ],
      "AccessControl": [
        5560
      ],
      "AccessControlEnumerable": [
        5685
      ],
      "Context": [
        7940
      ],
      "Counters": [
        8014
      ],
      "ECDSA": [
        8624
      ],
      "EIP712": [
        8778
      ],
      "ERC165": [
        8802
      ],
      "ERC20": [
        7007
      ],
      "ERC20Burnable": [
        7129
      ],
      "ERC20Pausable": [
        7166
      ],
      "ERC20Permit": [
        7363
      ],
      "EnumerableSet": [
        9725
      ],
      "IAccessControl": [
        5758
      ],
      "IAccessControlEnumerable": [
        5783
      ],
      "IERC165": [
        8814
      ],
      "IERC20": [
        7085
      ],
      "IERC20Metadata": [
        7191
      ],
      "IERC20Permit": [
        7399
      ],
      "Ownable": [
        5888
      ],
      "Pausable": [
        6421
      ],
      "Strings": [
        8217
      ]
    },
    "id": 11264,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11168,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:61"
      },
      {
        "absolutePath": "project:/contracts/AKX/AKX.sol",
        "file": "./AKX.sol",
        "id": 11169,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11264,
        "sourceUnit": 11167,
        "src": "56:19:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 11170,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11264,
        "sourceUnit": 5889,
        "src": "76:52:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11171,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5888,
              "src": "153:7:61"
            },
            "id": 11172,
            "nodeType": "InheritanceSpecifier",
            "src": "153:7:61"
          }
        ],
        "canonicalName": "AKXTFaucet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 11263,
        "linearizedBaseContracts": [
          11263,
          5888,
          7940
        ],
        "name": "AKXTFaucet",
        "nameLocation": "139:10:61",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 11175,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "178:5:61",
            "nodeType": "VariableDeclaration",
            "scope": 11263,
            "src": "167:16:61",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AKX_$11166",
              "typeString": "contract AKX"
            },
            "typeName": {
              "id": 11174,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11173,
                "name": "AKX",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11166,
                "src": "167:3:61"
              },
              "referencedDeclaration": 11166,
              "src": "167:3:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AKX_$11166",
                "typeString": "contract AKX"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11211,
              "nodeType": "Block",
              "src": "241:258:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 11185,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11175,
                              "src": "302:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AKX_$11166",
                                "typeString": "contract AKX"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AKX_$11166",
                                "typeString": "contract AKX"
                              }
                            ],
                            "id": 11184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "294:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11183,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "294:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "294:14:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "320:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "312:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11187,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "312:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "312:10:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "294:28:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46756e6374696f6e2063616e20626520696e766f6b6564206f6e6c79206f6e6365",
                        "id": 11192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "324:35:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2051a8e2d4cfa54558cc38ad478fae354285eb958130a7f9cfc780318ec8c659",
                          "typeString": "literal_string \"Function can be invoked only once\""
                        },
                        "value": "Function can be invoked only once"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2051a8e2d4cfa54558cc38ad478fae354285eb958130a7f9cfc780318ec8c659",
                          "typeString": "literal_string \"Function can be invoked only once\""
                        }
                      ],
                      "id": 11182,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "286:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "286:74:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11194,
                  "nodeType": "ExpressionStatement",
                  "src": "286:74:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11196,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11177,
                          "src": "407:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "425:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "417:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11197,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "417:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "417:10:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "407:20:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e20636f6e74726163742061646472657373",
                        "id": 11202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "429:32:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1",
                          "typeString": "literal_string \"Invalid token contract address\""
                        },
                        "value": "Invalid token contract address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06ebfe378f7fe772505ae89070020ed35d339723d05a163f9140463cf1c3e2e1",
                          "typeString": "literal_string \"Invalid token contract address\""
                        }
                      ],
                      "id": 11195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "399:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "399:63:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11204,
                  "nodeType": "ExpressionStatement",
                  "src": "399:63:61"
                },
                {
                  "expression": {
                    "id": 11209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11205,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11175,
                      "src": "473:5:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AKX_$11166",
                        "typeString": "contract AKX"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 11207,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11177,
                          "src": "485:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 11206,
                        "name": "AKX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11166,
                        "src": "481:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AKX_$11166_$",
                          "typeString": "type(contract AKX)"
                        }
                      },
                      "id": 11208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "481:11:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AKX_$11166",
                        "typeString": "contract AKX"
                      }
                    },
                    "src": "473:19:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AKX_$11166",
                      "typeString": "contract AKX"
                    }
                  },
                  "id": 11210,
                  "nodeType": "ExpressionStatement",
                  "src": "473:19:61"
                }
              ]
            },
            "functionSelector": "6b318813",
            "id": 11212,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11180,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11179,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5830,
                  "src": "231:9:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "231:9:61"
              }
            ],
            "name": "setAKXT",
            "nameLocation": "198:7:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11177,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "214:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 11212,
                  "src": "206:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "206:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "205:16:61"
            },
            "returnParameters": {
              "id": 11181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "241:0:61"
            },
            "scope": 11263,
            "src": "189:310:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11261,
              "nodeType": "Block",
              "src": "532:282:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 11218,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11175,
                              "src": "558:5:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AKX_$11166",
                                "typeString": "contract AKX"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AKX_$11166",
                                "typeString": "contract AKX"
                              }
                            ],
                            "id": 11217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "550:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11216,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "550:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "550:14:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "576:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "568:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11220,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "568:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "568:10:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "550:28:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20636f6e747261637420686173206e6f74206265656e20736574",
                        "id": 11225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "580:33:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b51b0945d6bd79460fef28524bd99d69bc44c37389c802a8373178881086648",
                          "typeString": "literal_string \"Token contract has not been set\""
                        },
                        "value": "Token contract has not been set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b51b0945d6bd79460fef28524bd99d69bc44c37389c802a8373178881086648",
                          "typeString": "literal_string \"Token contract has not been set\""
                        }
                      ],
                      "id": 11215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "542:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "542:72:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11227,
                  "nodeType": "ExpressionStatement",
                  "src": "542:72:61"
                },
                {
                  "assignments": [
                    11229
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11229,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "632:6:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 11261,
                      "src": "624:14:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11228,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "624:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11240,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31303030",
                      "id": 11230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "641:4:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 11231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "648:2:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 11234,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11175,
                                "src": "662:5:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AKX_$11166",
                                  "typeString": "contract AKX"
                                }
                              },
                              "id": 11235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "decimals",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6496,
                              "src": "662:14:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                "typeString": "function () view external returns (uint8)"
                              }
                            },
                            "id": 11236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "662:16:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 11233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "654:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 11232,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "654:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "654:25:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "648:31:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "641:38:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "624:55:61"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 11243,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "709:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "709:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 11241,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11175,
                          "src": "693:5:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AKX_$11166",
                            "typeString": "contract AKX"
                          }
                        },
                        "id": 11242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6520,
                        "src": "693:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 11245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "693:27:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 11246,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11229,
                      "src": "724:6:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "693:37:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11252,
                  "nodeType": "IfStatement",
                  "src": "689:78:61",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "43616e6e6f742061637175697265206d6f72652066756e6473",
                          "id": 11249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "739:27:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b2cce4c582a32170b043ae452e4960b198c003d2c23c745308adb8e3f7d53f53",
                            "typeString": "literal_string \"Cannot acquire more funds\""
                          },
                          "value": "Cannot acquire more funds"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_b2cce4c582a32170b043ae452e4960b198c003d2c23c745308adb8e3f7d53f53",
                            "typeString": "literal_string \"Cannot acquire more funds\""
                          }
                        ],
                        "id": 11248,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "732:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 11250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "732:35:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 11251,
                    "nodeType": "ExpressionStatement",
                    "src": "732:35:61"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11256,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "788:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "788:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11258,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11229,
                        "src": "800:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11253,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11175,
                        "src": "777:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AKX_$11166",
                          "typeString": "contract AKX"
                        }
                      },
                      "id": 11255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11112,
                      "src": "777:10:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 11259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "777:30:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11260,
                  "nodeType": "ExpressionStatement",
                  "src": "777:30:61"
                }
              ]
            },
            "functionSelector": "efc81a8c",
            "id": 11262,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "create",
            "nameLocation": "514:6:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "520:2:61"
            },
            "returnParameters": {
              "id": 11214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "532:0:61"
            },
            "scope": 11263,
            "src": "505:309:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 11264,
        "src": "130:686:61",
        "usedErrors": []
      }
    ],
    "src": "32:784:61"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-05-16T16:39:42.537Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}